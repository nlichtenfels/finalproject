//global variables
var currentScene = 0;
var numPipes = 100;


//Bird Code
var drawBird = function(x,y) {
    
   stroke(0, 0, 0);
    //Body
    fill(251, 255, 0);
    ellipse(70 + x,150 + y,34,29);
    //Eye
    fill(242, 239, 242);
    ellipse(78+x,146+y,15,13);
    fill(0, 0, 0);
    ellipse(79+x,145+y,2,3);
    //Beak
    fill(245, 98, 0);
    ellipse(85+x,153+y,17,8);
      ellipse(85+x,157+y,15,5);
    //Wing
    fill(255, 250, 189);
    ellipse(58+x,152+y,17,8);
};




//Background
var drawBg = function() {
background(105, 198, 224);
noLoop();
var building = 98;
var x = 10;

//Clouds
noStroke();
rect(0,314-40,401,135);
for (var c = 0; c < 4; c++)
{
    fill(255, 255, 255);
    ellipse(124 * c,313- 50,66,69);
    ellipse(124 * c - 86, 327-50,52,71);
    ellipse(125 * c + 79, 320-50,59,68);
}
//Buildings
fill(214, 210, 219);
stroke(20, 134, 179);
for(var i = 0; i<9; i++)
{
rect(building * i - 40,340 - 50, 19 ,119);
rect(building * i - 52,349 - 50, 28 ,53);
rect(building * i - 32,359 - 50, 18 ,47);
rect(building * i - 1, 344 - 50,32,58);
rect(building * i - 17,324 - 50, 27 ,100);

}
var windows = [];
for (var w = 0; w < 30; w++)
{
   // rect(11 * b, 331,1,4);
}

//Bushes
for (var b = 0; b < 7; b++)
{
    fill(80, 209, 54);
    ellipse(78 * b - 50, 390 - 50 ,42,46);
    ellipse(78 * b, 390 - 50, 42,40);
    ellipse(78 * b - 26, 390 - 50, 43,30);
    ellipse(78 * b - 58, 392 - 50, 39,30);
    ellipse(78 * b - 82, 400 - 50, 36,30);
    ellipse(78 * b - 27, 399 - 50, 38,30);
}
//Foreground 
fill(227, 230, 147);
rect(0, 355,400,50);
fill(63, 245, 17);
rect(0, 348, 400, 8);
draw = function() {
    

for (var s = 0; s < 44; s++)
{
    fill(29, 194, 8);
    rect(x * s , 348,3,8);
}

};
};

//khan button class + modifiers
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.color = config.color;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    fill(this.color);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

var startButton = new Button({
    x: 125,
    y: 296,
    color: (176, 219, 227),
    label: "   Start game!",
    onClick: function() {
        currentScene = 1;
    }
});

var restartButton = new Button({
    x: 70,
    y: 285,
    width: 120,
    label: " Try Again!",
    onClick: function() {
        currentScene = 1;
    }
});

var quitButton = new Button({
    x: 210,
    y: 285,
    width: 120,
    label: " Quit Game",
    onClick: function() {
        currentScene = 0;
    }
});

//drawbitmoji function
var drawbody = function (bitmojiX,bitmojiY,bitmojiHeight) {

stroke(217,214,217);
fill(217, 214, 217);
rect(bitmojiX+(bitmojiHeight/150*50),bitmojiY+(bitmojiHeight/150*130),bitmojiHeight/150*95,bitmojiHeight/150*100);
ellipse(bitmojiX+(bitmojiHeight/150*53),bitmojiY+(bitmojiHeight/150*184),(bitmojiHeight/150*47),(bitmojiHeight/150*113));
ellipse(bitmojiX+(bitmojiHeight/150*146),bitmojiY+(bitmojiHeight/150*184),(bitmojiHeight/150*47),(bitmojiHeight/150*113));

stroke(0,0,0); //initials
line(bitmojiX+(bitmojiHeight/150*75),bitmojiY+(bitmojiHeight/150*150),bitmojiX+(bitmojiHeight/150*75),bitmojiY+(bitmojiHeight/150*180));
line(bitmojiX+(bitmojiHeight/150*75),bitmojiY+(bitmojiHeight/150*150),bitmojiX+(bitmojiHeight/150*90),bitmojiY+(bitmojiHeight/150*180));
line(bitmojiX+(bitmojiHeight/150*90),bitmojiY+(bitmojiHeight/150*150),bitmojiX+(bitmojiHeight/150*90),bitmojiY+(bitmojiHeight/150*180));
line(bitmojiX+(bitmojiHeight/150*105),bitmojiY+(bitmojiHeight/150*150),bitmojiX+(bitmojiHeight/150*105),bitmojiY+(bitmojiHeight/150*180));
line(bitmojiX+(bitmojiHeight/150*105),bitmojiY+(bitmojiHeight/150*180),bitmojiX+(bitmojiHeight/150*120),bitmojiY+(bitmojiHeight/150*180));

};

var drawhead = function (bitmojiX,bitmojiY,bitmojiHeight) {
   
stroke(255, 220, 177);
fill(255,220,177);
ellipse(bitmojiX+(bitmojiHeight/150*100),bitmojiY+(bitmojiHeight/150*100),(bitmojiHeight/150*80),(bitmojiHeight/150*90));

};

var drawface = function (bitmojiX,bitmojiY,bitmojiHeight) {

stroke(0,0,0); //lefteye
fill(255, 255, 255);
ellipse(bitmojiX+(bitmojiHeight/150*85),bitmojiY+(bitmojiHeight/150*100),(bitmojiHeight/150*10),(bitmojiHeight/150*10));

stroke(37, 98, 196); //left pupil
ellipse(bitmojiX+(bitmojiHeight/150*85),bitmojiY+(bitmojiHeight/150*100),(bitmojiHeight/150*2),(bitmojiHeight/150*2));

stroke(0,0,0); // right eye
fill(255, 255, 255);
ellipse(bitmojiX+(bitmojiHeight/150*115),bitmojiY+(bitmojiHeight/150*100),(bitmojiHeight/150*10),(bitmojiHeight/150*10));

stroke(37, 98, 196); //right pupil
ellipse(bitmojiX+(bitmojiHeight/150*115),bitmojiY+(bitmojiHeight/150*100),(bitmojiHeight/150*2),(bitmojiHeight/150*2));

stroke(0,0,0); //mouth
arc(bitmojiX+(bitmojiHeight/150*100),bitmojiY+(bitmojiHeight/150*120),(bitmojiHeight/150*40),(bitmojiHeight/150*-15),-180,0);
line(bitmojiX+(bitmojiHeight/150*80),bitmojiY+(bitmojiHeight/150*120),bitmojiX+(bitmojiHeight/150*120),bitmojiY+(bitmojiHeight/150*120));

stroke(102, 76, 40); //hair
fill(102, 76, 40);
ellipse(bitmojiX+(bitmojiHeight/150*100),bitmojiY+(bitmojiHeight/150*66),(bitmojiHeight/150*54),(bitmojiHeight/150*24));
ellipse(bitmojiX+(bitmojiHeight/150*80),bitmojiY+(bitmojiHeight/150*72),(bitmojiHeight/150*32),(bitmojiHeight/150*21));
ellipse(bitmojiX+(bitmojiHeight/150*123),bitmojiY+(bitmojiHeight/150*72),(bitmojiHeight/150*32),(bitmojiHeight/150*21));
ellipse(bitmojiX+(bitmojiHeight/150*106),bitmojiY+(bitmojiHeight/150*72),(bitmojiHeight/150*35),(bitmojiHeight/150*21));
ellipse(bitmojiX+(bitmojiHeight/150*114),bitmojiY+(bitmojiHeight/150*61),(bitmojiHeight/150*32),(bitmojiHeight/150*21));
ellipse(bitmojiX+(bitmojiHeight/150*88),bitmojiY+(bitmojiHeight/150*62),(bitmojiHeight/150*32),(bitmojiHeight/150*21));
ellipse(bitmojiX+(bitmojiHeight/150*65),bitmojiY+(bitmojiHeight/150*84),(bitmojiHeight/150*16),(bitmojiHeight/150*22));
ellipse(bitmojiX+(bitmojiHeight/150*137),bitmojiY+(bitmojiHeight/150*84),(bitmojiHeight/150*16),(bitmojiHeight/150*22));

stroke(0,0,0); //nose
fill(255,220,177);
bezier(bitmojiX+(bitmojiHeight/150*98),bitmojiY+(bitmojiHeight/150*101),bitmojiX+(bitmojiHeight/150*109),bitmojiY+(bitmojiHeight/150*102),bitmojiX+(bitmojiHeight/150*112),bitmojiY+(bitmojiHeight/150*115),bitmojiX+(bitmojiHeight/150*96),bitmojiY+(bitmojiHeight/150*110));

};

var drawbitmoji = function (bitmojiX,bitmojiY,bitmojiHeight) {

strokeWeight(1);
drawbody(bitmojiX,bitmojiY,bitmojiHeight);
drawhead(bitmojiX,bitmojiY,bitmojiHeight);
drawface(bitmojiX,bitmojiY,bitmojiHeight);

};

// Ryans Bitmoji
  var drawBody = function(hX,hY,h)
    {
        
         noStroke();
        var p = h/100;
       
    //hood
    fill(49, 64, 17);
    ellipse(hX+101*p,hY+154*p,69*p,47*p);
    //shoulders
    fill(49, 64, 17);
    ellipse(hX+103*p,hY+173*p,91*p,50*p);
    //body
     rect(hX+75*p,hY+159*p,57*p,40*p);
    ellipse(hX+66*p,hY+182*p,25*p,47*p);//arms
    ellipse(hX+139*p,hY+182*p,25*p,47*p);
    fill(49, 64, 17);
    rect(hX+58*p,hY+192*p,90*p,13*p);
    //initials
    fill(255, 0, 0);
     textSize(15*p);
    text("RK",hX+92*p,hY+184*p);
   
    };



            var drawHead = function(hX,hY,h)
            {
                  noStroke();
                var p = h/100;
            //Head
            fill(224, 172, 105);
            ellipse(hX+101*p,hY+93*p,84*p,97*p);
            //cheekbones
            fill(255, 255, 255);
            
             
            ellipse(hX+62*p,hY+107*p,16*p,56*p);
            ellipse(hX+140*p,hY+107*p,16*p,56*p);
            //hair
            fill(0, 0, 0);
            ellipse(hX+101*p,hY+54*p,67*p,38*p);
            ellipse(hX+73*p,hY+72*p,23*p,51*p);
            ellipse(hX+129*p,hY+72*p,23*p,51*p);
            //neck
            noStroke();
            fill(224, 172, 105);
            rect(hX+88*p,hY+134*p,26*p,23*p);

            //Freckles
            noStroke();
            fill(71, 43, 17);
            ellipse(hX+117*p,hY+101*p,2*p,2*p);
            
            ellipse(hX+93*p,hY+105*p,1*p,1*p);
            ellipse(hX+81*p,hY+100*p,1*p,1*p);
            ellipse(hX+84*p,hY+107*p,1*p,1*p);
            ellipse(hX+91*p,hY+100*p,1*p,1*p);
            ellipse(hX+75*p,hY+106*p,1*p,1*p);
            ellipse(hX+98*p,hY+99*p,1*p,1*p);
            ellipse(hX+113*p,hY+103*p,1*p,1*p);
            ellipse(hX+121*p,hY+103*p,1*p,1*p);
            ellipse(hX+119*p,hY+97*p,1*p,1*p);
            ellipse(hX+127*p,hY+102*p,1*p,1*p);
          
             //Eyes
            fill(19, 16, 74);
            rect(hX+85*p,hY+92*p,9*p,3*p); //left eye
            ellipse(hX+112*p,hY+93*p,8*p,8*p); //right eye
            //mouth
            stroke(209, 38, 38);
            fill(255, 255, 255);
            arc(hX+101*p, hY+117*p, 34*p, 30*p, 0, 180);
            line(hX+83*p,hY+116*p,hX+117*p,hY+116*p);
             //Nose
            stroke(0, 0, 0);
            fill(224, 172, 105);
        bezier(hX+100*p,hY+87*p,hX+107*p,hY+106*p,hX+118*p,hY+100*p,hX+99*p,hY+103*p);
           
        //hat
       
        fill(247, 223, 163);
        stroke(247,223,163);
        arc(hX+101*p, hY+64*p, 80*p, 66*p, 170, 370);
        rect(hX+61*p,hY+61*p,24*p,19*p);
        rect(hX+117*p,hY+61*p,24*p,19*p);
        fill(27, 24, 115);
        stroke(27, 24, 115);
        rect(hX+81*p,hY+74*p,42*p,7*p);
        };

var drawBitmoji = function(hX,hY,h)
{
drawBody(hX,hY,h);
drawHead(hX,hY,h);

};

//playable character constructor function + modifiers
var character = function(x, y) {
    this.x = x;
    this.y = y;
};

character.prototype.draw = function() {
    this.y = constrain(this.y, -10, height-45);
    drawbitmoji(this.x, this.y, 40);
};


character.prototype.up = function() {
    this.y -= 4;
};

character.prototype.down = function() {
    this.y += 4;
};

character.prototype.checkCollision = function(pipe) {
    if( (pipe.x >= (this.x - 50) && pipe.x <= (this.x + 50) ) && 
        (pipe.y >= (this.y - 100) && pipe.y <= (this.y + 200 ) ) ||
        (pipe.x >= (this.x - 50) && pipe.x <= (this.x + 50) ) && 
        (pipe.y >= (this.y + 300) && pipe.y <= (this.y + 500 ) ) ) {
        
        //plays death scene
        currentScene = 2;
        
    }
};

//playable character definition
var characterPlay = new character(20, 180);

//pipes constructor function + modifiers
var pipe = function(x, y) {
    this.x = x;
    this.y = y;
};

pipe.prototype.draw = function() {
    fill(96, 173, 83);
    stroke(84, 150, 72);
    strokeWeight(2);
    
    //long section of pipe
    rect(this.x, this.y-200, 50, 300);
    rect(this.x, this.y+240, 50, 300);
    
    //short top section of pipe
    rect(this.x-5, this.y+100, 60, 10);
    rect(this.x-5, this.y+240, 60, 10);
};

//array that holds random pipe positions
var pipes = [];

//for loop that creates random pipe locations
for(var i = 0; i < numPipes; i++) {
    pipes.push(new pipe(i * 250 + 300, random(-125,150)));    
}

//scene functions

    //scene1 function
    var scene1 = function () {
       
        drawBg();
      drawBird(121,3);
     
        strokeWeight(1);
        textSize(30);
        fill(0, 0, 0);
        text("Flappy Bird", 115, 95);
        textSize(10);
        text("by Nathan Lichtenfels", 10, 369);
        text("and Ryan Kraus", 307, 369);
        fill(255, 255, 255);
        rect(15, 245, 83, 100);
        rect(300, 245, 83, 100);
        drawbitmoji(10, 227, 70);
        drawBitmoji(292,236,50);
        startButton.draw();
    };

    //scene 2
    var scene2 = function() {
        
       background(255, 255, 255);
        characterPlay.draw();
        
    };  
    
    //death scene
    var scene3 = function() {
        stroke(5, 84, 6);
        fill(35, 158, 121);
        rect(50, 50, 300, 300);
        fill(3, 56, 3);
        textSize(40);
        text("Game Over!", 90, 90);
        stroke(0, 0, 0);
        strokeWeight(1);
        fill(222, 141, 27);
        restartButton.draw();
        quitButton.draw();
    };
    
    
//mouseclicked function
mouseClicked = function() {
    startButton.handleMouseClick();
};
    
draw = function() {
    
    if (currentScene === 0) {
        scene1();
    }
    else if (currentScene === 1) {
        scene2();
            
            //allows for character movement + basic character physics
            if (keyIsPressed && key.code === 32) {
                characterPlay.up();
            }
            else  {
                characterPlay.down(); 
            }
            
                //draws pipes from pipes array + makes pipes move
                for (var i =0; i < numPipes; i++) {
                    pipes[i].draw(); 
                    characterPlay.checkCollision(pipes[i]);
                    pipes[i].x -= 2;
                }
    }
    else if (currentScene === 2) {
        scene3();
    }
    
    
    
};
